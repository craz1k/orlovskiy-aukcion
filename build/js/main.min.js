/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var countdown;\nvar secondsGlobal = 600;\nvar id = 0;\nvar LOT = {\n  id: '',\n  name: '',\n  totalSum: 0,\n  curSum: 0\n};\nvar lotArray = []; // const TIMER_DOM = document.querySelector('[timer]');\n\nvar MIN_DOM = document.querySelector('[minutes]');\nvar SEC_DOM = document.querySelector('[seconds]');\nvar MSEC_DOM = document.querySelector('[mseconds]');\nvar START_STOP = document.querySelector('[start]');\nvar RESET = document.querySelector('[reset]');\nvar PLUS_ONE_MIN = document.querySelector('[plus-one-min]');\nvar PLUS_TWO_MIN = document.querySelector('[plus-two-min]');\nvar TEN_MIN = document.querySelector('[ten-min]');\nvar MINUS_ONE_MIN = document.querySelector('[minus-one-min]');\nvar ADD_LOT = document.querySelector('[add-lot]');\nvar LOTS = document.querySelector('.auc__lots-wrapper');\n\nvar timer = function timer(seconds) {\n  var NOW = Date.now();\n  var THEN = NOW + seconds * 1000;\n  display(seconds);\n  countdown = setInterval(function () {\n    var SECONDS_LEFT = Math.round((THEN - Date.now()) / 1000);\n\n    if (SECONDS_LEFT < 0) {\n      clearInterval(countdown);\n      START_STOP.classList.remove('auc__start--stop');\n      return;\n    }\n\n    display(SECONDS_LEFT);\n  }, 10);\n};\n\nvar display = function display(seconds) {\n  secondsGlobal = seconds;\n  var MIN = Math.floor(seconds / 60);\n  var SEC = seconds % 60; // const MSEC = 1000 - date.getMilliseconds();\n\n  MIN < 10 ? MIN_DOM.innerHTML = '0' + MIN : MIN_DOM.innerHTML = MIN;\n  SEC < 10 ? SEC_DOM.innerHTML = '0' + SEC : SEC_DOM.innerHTML = SEC; // MSEC < 100 ? MSEC_DOM.innerHTML = '' + MSEC : MSEC_DOM.innerHTML = MSEC;\n};\n\nvar setTime = function setTime(time) {\n  if (!START_STOP.classList.contains('auc__start--stop') || !countdown) {\n    secondsGlobal += time;\n    display(secondsGlobal);\n  } else {\n    secondsGlobal += time;\n    clearInterval(countdown);\n    timer(secondsGlobal);\n  }\n};\n\nvar reset = function reset() {\n  START_STOP.classList.remove('auc__start--stop');\n  secondsGlobal = 0;\n  clearInterval(countdown);\n  display(secondsGlobal);\n};\n\nvar lotAdd = function lotAdd() {\n  LOTS.insertAdjacentHTML('beforeend', \"<div class=\\\"auc__item\\\"><input class=\\\"auc__lot\\\" type=\\\"text\\\"><input class=\\\"auc__total-sum\\\" type=\\\"text\\\"\\n    pattern=\\\"[0-9]{10}\\\" oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\"><input class=\\\"auc__current-sum\\\"\\n    type=\\\"text\\\" pattern=\\\"[0-9]{10}\\\" oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\"><button\\n    class=\\\"auc__add-sum\\\" add-sum><svg class=\\\"auc__icon\\\">\\n      <use xlink:href=\\\"img/sprite.svg#plus\\\"></use>\\n    </svg></button></div>\");\n  nodeAdding();\n};\n\nSTART_STOP.addEventListener('click', function () {\n  if (secondsGlobal > 0 && !START_STOP.classList.contains('auc__start--stop')) {\n    timer(secondsGlobal);\n    START_STOP.classList.add('auc__start--stop');\n  } else if (START_STOP.classList.contains('auc__start--stop')) {\n    clearInterval(countdown);\n    START_STOP.classList.remove('auc__start--stop');\n  }\n});\nRESET.addEventListener('click', reset);\nPLUS_ONE_MIN.addEventListener('click', function () {\n  setTime(60);\n});\nPLUS_TWO_MIN.addEventListener('click', function () {\n  setTime(120);\n});\nTEN_MIN.addEventListener('click', function () {\n  secondsGlobal = 0;\n  setTime(600);\n});\nMINUS_ONE_MIN.addEventListener('click', function () {\n  secondsGlobal >= 60 ? setTime(-60) : reset();\n});\nADD_LOT.addEventListener('click', lotAdd);\n\nvar nodeAdding = function nodeAdding() {\n  return document.querySelectorAll('[add-sum]').forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var LOT_NAME = btn.parentElement.firstChild;\n      var LOT_CUR_SUM = btn.previousSibling;\n      var LOT_TOTAL_SUM = btn.parentElement.firstChild.nextSibling;\n\n      if (!isNaN(parseFloat(LOT_CUR_SUM.value))) {\n        if (!btn.hasAttribute('id')) {\n          var LOT_CLONE = {};\n          Object.assign(LOT_CLONE, LOT);\n          LOT_CLONE.id = id;\n          LOT_CLONE.name = LOT_NAME.value;\n          LOT_CLONE.totalSum += parseFloat(LOT_CUR_SUM.value);\n          LOT_CLONE.curSum = parseFloat(LOT_CUR_SUM.value);\n          LOT_CUR_SUM.value = '';\n          LOT_TOTAL_SUM.value = LOT_CLONE.totalSum;\n          btn.setAttribute('id', id++);\n          lotArray.push(LOT_CLONE);\n          console.log(lotArray);\n        } else {\n          var curLot = lotArray.find(function (el) {\n            return el.id === parseInt(btn.getAttribute('id'), 10);\n          });\n          curLot.name = LOT_NAME.value;\n          curLot.curSum = parseFloat(LOT_CUR_SUM.value);\n          curLot.totalSum += parseFloat(LOT_CUR_SUM.value);\n          LOT_CUR_SUM.value = '';\n          LOT_TOTAL_SUM.value = curLot.totalSum;\n          console.log(lotArray);\n        }\n      }\n    });\n  });\n};\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ })

/******/ });